# JPA(Java Persistence API)

**JPA (Java Persistence API)란 지속적으로 거대한 양의 데이터를 데이터 베이스에 저장하기 위한 클래스 또는 메소드의 집합을 의미한다.**

---

## JPA - Introduction

**기업에서 사용하는 어플리케이션은 방대한 양의 데이터를 검색 또는 저장함으로써 데이터베아스 연산을 수행한다.**
저장공간 관리를 위한 모든 이용가능한 기술이 있음에도 불구하고, 개발자들은 데이터베이스 연산을 효율적으로 수행하기 위해 노력중이다.

### Mismatches between relational and object models

Relational Objects는 테이블(tabular) 형식으로 나타내어진다. 반면에 Object models은 객체의 상호연결된 그래프로 표시되어집니다.

관계형 데이터베이스로부터 object model을 검색하고 저장하는 동안, 약간의 mismatch는 다음과 같은 이유에 의해서 발생합니다.

- **Granularity :** Object model은 관계형 모델보다 더 많은 단위(granularity)를 가집니다.
- **Subtypes :** Subtypes는 모든 종류의 관계형 데이터베이스에서 지원하지 않습니다.
- **Identity** : 객체 모델과 마찬가지로, 관계형 모델은 등식을 작성하는 동안에 정체를 노출시키지 않습니다.,
- **Associations :** 관계형 모델은 object domain model을 조사하는 동안 여러 관계를 결정할 수 없다.
- **Data navigation :** 객체 네트워크에서 객체간의 Data navigation이 다르다.

### Where to use JPA?

관계형 객체를 관리하기 위해 코드를 쓰는 수고(burden)을 감소하기 위해, 개발자는 JPA Provider 프레임워크를 따른다. JPA Provider 프레임워크는 데이터베이스 인스턴스간 상호관계를 쉽게 해준다. 여기서 필요한 프레임워크는 JPA에 의해 대신 처리된다.

<img src="/Users/baejongjin/Library/Application Support/typora-user-images/image-20200112194721418.png" alt="image-20200112194721418" style="zoom:50%;" />

### JPA History

이전 버젼의 EJB에서, 정의된 persistence 단계에서 business 로직 단계를 javax.ejb.EntitiyBean 인터페이스를 사용해서 결합했다.

- 

































